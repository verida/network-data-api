service: network-data-api
 
custom:
  serverless-offline:
    httpPort: 5022
    noPrependStageInUrl: true
    useChildProcesses: true
  webpack:
    includeModules: true
    packagerOptions:
      scripts:
        - npm_config_platform=linux npm_config_arch=x64 yarn add leveldown

provider:
  name: aws
  runtime: nodejs16.x
  stage: prod
  region: us-east-1
 
functions:
  app:
    handler: dist/server-app.handler
    events:
      - httpApi:
          path: '/{proxy+}'
          method: '*'

resources:
  Resources:
    VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: "10.0.0.0/16"
    ServerlessStorageSecurityGroup:
      DependsOn: VPC
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Ingress for Redis Cluster
        VpcId:
          Ref: VPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '6379'
          ToPort: '6379'
          SourceSecurityGroupId:
            Ref: ServerlessSecurityGroup
    ElasticCacheCluster:
      DependsOn: ServerlessStorageSecurityGroup
      Type: AWS::ElastiCache::CacheCluster
      Properties:
        AutoMinorVersionUpgrade: true
        Engine: redis
        CacheNodeType: ${self:custom.config.CACHE_INSTANCE_SIZE}
        NumCacheNodes: 1
        VpcSecurityGroupIds:
        - "Fn::GetAtt": ServerlessStorageSecurityGroup.GroupId
        CacheSubnetGroupName:
          Ref: ServerlessCacheSubnetGroup

plugins:
  - serverless-offline
  - serverless-plugin-common-excludes  
  - serverless-plugin-include-dependencies 

package:
  excludeDevDependencies: false
  patterns:
    - '!node_modules/**'  